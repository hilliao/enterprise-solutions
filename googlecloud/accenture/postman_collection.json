{
	"info": {
		"_postman_id": "d39b66d5-4dc2-4f4f-8cda-8ba42ca2d6bf",
		"name": "GoogleCloud",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get GSA keys",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "afeb31d6-c0bf-47b7-8740-29b7324a2cff",
						"exec": [
							"pm.test(\"getting keys for \"+pm.environment.get(\"GSA\"), function () {",
							"  pm.response.to.have.status(200);",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.keys).to.instanceOf(Array)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{id_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{url}}/sa/{{GSA}}/keys",
					"host": [
						"{{url}}"
					],
					"path": [
						"sa",
						"{{GSA}}",
						"keys"
					]
				},
				"description": "List keys for the service account set in the URL\n$ gcloud auth print-identity-token"
			},
			"response": []
		},
		{
			"name": "get GSA keys days older",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{id_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{url}}/sa/{{GSA1}}/keys-days-older/0.000039",
					"host": [
						"{{url}}"
					],
					"path": [
						"sa",
						"{{GSA1}}",
						"keys-days-older",
						"0.000039"
					]
				},
				"description": "List user managed keys over floating point number days old for the service account set in the URL\n$ gcloud auth print-identity-token"
			},
			"response": []
		},
		{
			"name": "delete GSA keys days older",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{id_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{url}}/sa/{{GSA}}/keys-days-older/0.000039",
					"host": [
						"{{url}}"
					],
					"path": [
						"sa",
						"{{GSA}}",
						"keys-days-older",
						"0.000039"
					]
				},
				"description": "Delete user managed keys over floating point number days old for the service account set in the URL $ gcloud auth print-identity-token"
			},
			"response": []
		},
		{
			"name": "audit secrets for service account keys",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{id_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"secret-regex\": \"^hil\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/projects/{{PROJECT_ID}}/audit-secrets",
					"host": [
						"{{url}}"
					],
					"path": [
						"projects",
						"{{PROJECT_ID}}",
						"audit-secrets"
					]
				},
				"description": "Audit the service account keys in secrets of format ${PROJECT_ID}_*\nDelete the secret if the service account is absent\n$ gcloud auth print-identity-token to get the Authorization Bearer token"
			},
			"response": []
		},
		{
			"name": "gen Google service account keys > add as secrets > delete old keys",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{id_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "GCP_SAs",
							"value": "{{GSA}},{{GSA1}}",
							"type": "text"
						},
						{
							"key": "secret_name_prefix",
							"value": "hil_0_",
							"type": "text"
						},
						{
							"key": "secret_manager_project_id",
							"value": "{{PROJECT_ID}}",
							"type": "text"
						}
					],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{url}}/gen-sa-keys-add-secrets/delete-keys-days-old/0.000694444",
					"host": [
						"{{url}}"
					],
					"path": [
						"gen-sa-keys-add-secrets",
						"delete-keys-days-old",
						"0.000694444"
					]
				},
				"description": "1. Create a Google service account keys from request body.form-data.GCP_SAs\n2. add to versions in secret manager as secret names of <secret_name_prefix><PROJECT_ID>_<SA_NAME>\n3. Delete keys older than specified floating number of days. 0 means do not delete keys.\nSecret Manager Admin role is required to create new secret name in secret_manager_project_id\n$ gcloud auth print-identity-token to get the Authorization Bearer token"
			},
			"response": []
		},
		{
			"name": "delete GSA keys",
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{id_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "sa-key-names",
							"value": "{{keys}}",
							"type": "text"
						}
					],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{url}}/sa-keys",
					"host": [
						"{{url}}"
					],
					"path": [
						"sa-keys"
					]
				},
				"description": "Delete the service account key by specifying service account key names separated by , in the format of projects/PROJECT_ID/serviceAccounts/sa@PROJECT_ID.iam.gserviceaccount.com/keys/key_name\n$ gcloud auth print-identity-token"
			},
			"response": []
		},
		{
			"name": "delete 1 GSA key",
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{id_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "sa-key-names",
							"value": "projects/{{PROJECT_ID}}/serviceAccounts/{{GSA}}/keys/e982ca1bae91d7a8bd2ca047dd9646e5134fc516",
							"type": "text"
						}
					],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{url}}/sa-keys",
					"host": [
						"{{url}}"
					],
					"path": [
						"sa-keys"
					]
				},
				"description": "Delete the service account key by specifying requestBody.gsa-key-names in the format of projects/PROJECT_ID/serviceAccounts/hil-test@PROJECT_ID.iam.gserviceaccount.com/keys/private_key_id\n$ gcloud auth print-identity-token"
			},
			"response": []
		},
		{
			"name": "Health check",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{id_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/health",
					"host": [
						"{{url}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Health check of the app \n$ gcloud auth print-identity-token to get the Authorization Bearer token"
			},
			"response": []
		},
		{
			"name": "Create AI platform notebooks",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "authorization",
						"value": "ya29.a0AfH6_REDACTED"
					},
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"projectId\" : \"PROJECT_ID\",\n\"instanceName\":\"hil-test-6\",\n\"VPCProjectId\":\"PROJECT_ID\",\n\"VPCName\":\"vpc-PROJECT_ID-shared\",\n\"region\":\"us-east1\",\n\"zone\":\"us-east1-c\",\n\"subnetName\":\"PROJECT_ID\",\n\"serviceAccount\": \"sa@PROJECT_ID.iam.gserviceaccount.com\",\n\"machineType\": \"e2-standard-2\",\n\"framework\": \"TensorFlow:2.3\",\n\"imageFamily\": \"tf2-2-3-cu110-notebooks-debian-10\",\n\"publicIp\": false\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "http://localhost:8080/notebooks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"notebooks"
					]
				},
				"description": "execute < gcloud auth print-access-token > and paste to the Authorization header without Bearer"
			},
			"response": []
		},
		{
			"name": "Create AI platform notebooks via GCP API",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ya29.a_REDACTED",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"network\": \"projects/PROJECT_ID/global/networks/vpc-PROJECT_ID-shared\",\n  \"subnet\": \"projects/PROJECT_ID/regions/us-east1/subnetworks/PROJECT_ID\",\n  \"noProxyAccess\": false,\n  \"installGpuDriver\": false,\n  \"machineType\": \"e2-standard-2\",\n  \"metadata\": {\n    \"framework\": \"TensorFlow:2.3\"\n  },\n  \"bootDiskType\": \"DISK_TYPE_UNSPECIFIED\",\n  \"bootDiskSizeGb\": \"100\",\n  \"noPublicIp\": true,\n  \"serviceAccount\": \"sa@PROJECT_ID.iam.gserviceaccount.com\",\n  \"vmImage\": {\n    \"project\": \"deeplearning-platform-release\",\n    \"imageFamily\": \"tf2-2-3-cu110-notebooks-debian-10\"\n  }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://notebooks.googleapis.com/v1beta1/projects/PROJECT_ID/locations/us-east1-b/instances?instanceId=hil-test-4",
					"protocol": "https",
					"host": [
						"notebooks",
						"googleapis",
						"com"
					],
					"path": [
						"v1beta1",
						"projects",
						"PROJECT_ID",
						"locations",
						"us-east1-b",
						"instances"
					],
					"query": [
						{
							"key": "instanceId",
							"value": "hil-test-4"
						}
					]
				},
				"description": "Create Google cloud AI platform notebooks per https://cloud.google.com/ai-platform/notebooks/docs/reference/rest/v1beta1/projects.locations.instances/create"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}